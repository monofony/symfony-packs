name: CQRS Pack

on:
    push:
        branches-ignore:
            - main
    release:
        types: [ created ]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday
    workflow_dispatch:

permissions:
    actions: write
    contents: write
    pull-requests: write

jobs:
    cqrs-pack:
        runs-on: ubuntu-latest

        name: "Tests (PHP ${{ matrix.php }})"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.3"]

        steps:
            -   uses: actions/checkout@v4

            -   name: "Setup PHP"
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    ini-values: date.timezone=Europe/Warsaw
                    extensions: intl, gd, mysql, pdo_mysql, :xdebug
                    tools: symfony
                    coverage: none

            -   name: "Get Composer cache directory"
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -   name: "Setup cache"
                uses: actions/cache@v3
                with:
                    path: |
                        ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ github.run_id }}-${{ runner.os }}-${{ hashFiles('composer.json') }}-symfony-${{ matrix.symfony }}

            -   name: "Validate composer.json"
                run: (cd src/Cqrs && composer validate --no-check-version)

            -   name: "Install dependencies"
                run: | 
                    (cd src/Cqrs && composer update --no-interaction --no-scripts)
                    (cd src/Cqrs && composer require --dev phpunit/phpunit)

            -   name: "Create test application"
                run: |
                    git config --global user.email "you@example.com"
                    git config --global user.name "Your Name"
                    (cd src/Cqrs && make create-test-application)
                id: end-of-setup

            -   name: "Run PHPUnit"
                run: (cd src/Cqrs && vendor/bin/phpunit)
